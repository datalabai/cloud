<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Copyright (C) 2015 Google Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License. You may obtain a copy of
  ~ the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations under
  ~ the License.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.google.cloud.dataflow</groupId>
    <artifactId>google-cloud-dataflow-java-sdk-parent</artifactId>
    <version>1.4.0</version>
  </parent>

  <groupId>com.google.cloud.dataflow</groupId>
  <artifactId>google-cloud-dataflow-java-examples-all</artifactId>
  <name>Google Cloud Dataflow Java Examples - All</name>
  <description>Google Cloud Dataflow Java SDK provides a simple, Java-based
    interface for processing virtually any size data using Google cloud
    resources. This artifact includes all Dataflow Java SDK
    examples.</description>
  <url>http://cloud.google.com/dataflow</url>

  <version>manual_build</version>

  <packaging>jar</packaging>

  <profiles>

    <!-- A profile that activates for JDK 8 and above to enable examples and 
         tests that use Java 8 language features, which are kept in
         src/main/java8 and src/test/java8, respectively. -->
    <profile>
      <id>java8</id>
      <activation>
        <jdk>[1.8,)</jdk>
      </activation>

      <build>
        <plugins>
          <!-- Tell Maven about the Java 8 main and test source root. -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <!-- Tell Maven about the Java 8 main source root. -->
              <execution>
                <id>add-java8-main-source</id>
                <phase>initialize</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${project.basedir}/src/main/java8</source>
                  </sources>
                </configuration>
              </execution>

              <!-- Tell Maven about the Java 8 test source root. -->
              <execution>
                <id>add-java8-test-source</id>
                <phase>initialize</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${project.basedir}/src/test/java8</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>

              <!-- Set `-source 1.7 -target 1.7` for Java 7 tests -->
              <execution>
                <id>default-testCompile</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>testCompile</goal>
                </goals>
                <configuration>
                  <testSource>1.7</testSource>
                  <testTarget>1.7</testTarget>
                  <testExcludes>
                    <!-- This pattern is brittle; we would prefer to filter on the directory
                         but that seems to be unavailable to us. -->
                    <exclude>**/*Java8Test.java</exclude>
                    <exclude>**/game/**/*.java</exclude>
                  </testExcludes>
                </configuration>
              </execution>

              <!-- Set `-source 1.8 -target 1.8` for Java 8 tests -->
              <execution>
                <id>java8-test-compile</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>testCompile</goal>
                </goals>
                <configuration>
                  <testSource>1.8</testSource>
                  <testTarget>1.8</testTarget>
                  <includes>
                    <!-- This pattern is brittle; we would prefer to filter on the directory
                         but that seems to be unavailable to us. -->
                    <include>**/*Java8Test.java</include>
                    <include>**/game/**/*.java</include>
                  </includes>
                </configuration>
              </execution>

              <!-- Set `-source 1.7 -target 1.7` for Java 7 examples -->
              <execution>
                <id>default-compile</id>
                <phase>compile</phase>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <source>1.7</source>
                  <target>1.7</target>
                  <excludes>
                    <!-- This pattern is brittle; we would prefer to filter on the directory
                         but that seems to be unavailable to us. -->
                    <exclude>**/*Java8*.java</exclude>
                    <exclude>**/game/**/*.java</exclude>
                  </excludes>
                </configuration>
              </execution>

              <!-- Set `-source 1.8 -target 1.8` for Java 8 examples -->
              <execution>
                <id>java8-compile</id>
                <phase>compile</phase>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <source>1.8</source>
                  <target>1.8</target>
                  <includes>
                    <!-- This pattern is brittle; we would prefer to filter on the directory
                         but that seems to be unavailable to us. -->
                    <include>**/*Java8*.java</include>
                    <include>**/game/**/*.java</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <finalName>${project.artifactId}-bundled-${project.version}</finalName>
              <artifactSet>
                <includes>
                  <include>*:*</include>
                </includes>
              </artifactSet>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- Adds a dependency on a specific version of the Dataflow SDK. -->
    <dependency>
      <groupId>com.google.cloud.dataflow</groupId>
      <artifactId>google-cloud-dataflow-java-sdk-all</artifactId>
      <version>1.4.0</version>
    </dependency>

    <!-- Dependencies below this line are specific dependencies needed by the examples code. -->
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-storage</artifactId>
      <version>v1-rev25-1.19.1</version>
      <exclusions>
        <!-- Exclude an old version of guava that is being pulled
             in by a transitive dependency google-api-client 1.19.0 -->
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava-jdk5</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-bigquery</artifactId>
      <version>v2-rev187-1.19.1</version>
      <exclusions>
        <!-- Exclude an old version of guava that is being pulled
             in by a transitive dependency google-api-client 1.19.0 -->
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava-jdk5</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson2</artifactId>
      <version>1.19.0</version>
      <exclusions>
        <!-- Exclude an old version of guava that is being pulled
             in by a transitive dependency google-api-client 1.19.0 -->
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava-jdk5</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>18.0</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.4.2</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.4.2</version>
    </dependency>

    <!-- Add slf4j API frontend binding with JUL backend -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.7</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.7</version>
    </dependency>

    <!-- Hamcrest and JUnit are required dependencies of DataflowAssert,
         which is used in the main code of DebuggingWordCount example. -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
    </dependency>
  </dependencies>
</project>
